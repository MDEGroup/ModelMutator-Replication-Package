Given this #ECORE metamodel  <?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="SimpleBPMN" nsURI="http://eclipse.org/eugenia/simplebpmn" nsPrefix="sbpmn">
  <eClassifiers xsi:type="ecore:EClass" name="BusinessProcess">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        eType="#//BPMNElement" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BPMNElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConnectingObject" abstract="true" eSuperTypes="#//BPMNElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="from" eType="#//FlowObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="to" eType="#//FlowObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Message" eSuperTypes="#//ConnectingObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="Sequence" eSuperTypes="#//ConnectingObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//ConnectingObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="FlowObject" abstract="true" eSuperTypes="#//BPMNElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="Gateway" abstract="true" eSuperTypes="#//FlowObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="XOR" eSuperTypes="#//Gateway"/>
  <eClassifiers xsi:type="ecore:EClass" name="OR" eSuperTypes="#//Gateway"/>
  <eClassifiers xsi:type="ecore:EClass" name="AND" eSuperTypes="#//Gateway"/>
  <eClassifiers xsi:type="ecore:EClass" name="StartEv" eSuperTypes="#//FlowObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntermediateEv" eSuperTypes="#//FlowObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="EndEv" eSuperTypes="#//FlowObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="Activity" eSuperTypes="#//FlowObject"/>
  <eClassifiers xsi:type="ecore:EClass" name="DataObject" eSuperTypes="#//BPMNElement"/>
</ecore:EPackage>
  and this #SEED model   <?xml version="1.0" encoding="UTF-8"?>
<sbpmn:BusinessProcess xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sbpmn="http://eclipse.org/eugenia/simplebpmn" xmi:id="_usMnYBECEeqWZpyjAqEpSw">
  <elements xsi:type="sbpmn:StartEv" xmi:id="_v5gIABECEeqWZpyjAqEpSw" name="hunger noticed"/>
  <elements xsi:type="sbpmn:Sequence" xmi:id="_z10MkBECEeqWZpyjAqEpSw" from="_v5gIABECEeqWZpyjAqEpSw" to="_2M4KkBECEeqWZpyjAqEpSw"/>
  <elements xsi:type="sbpmn:Activity" xmi:id="_2M4KkBECEeqWZpyjAqEpSw" name="acquire groceries"/>
  <elements xsi:type="sbpmn:Sequence" xmi:id="_5MKmMBECEeqWZpyjAqEpSw" from="_2M4KkBECEeqWZpyjAqEpSw" to="_74IdMBECEeqWZpyjAqEpSw"/>
  <elements xsi:type="sbpmn:Activity" xmi:id="_74IdMBECEeqWZpyjAqEpSw" name="prepare meal"/>
  <elements xsi:type="sbpmn:Sequence" xmi:id="_Bf3hwBEDEeqWZpyjAqEpSw" from="_74IdMBECEeqWZpyjAqEpSw" to="_FdFlQBEDEeqWZpyjAqEpSw"/>
  <elements xsi:type="sbpmn:IntermediateEv" xmi:id="_FdFlQBEDEeqWZpyjAqEpSw" name="meal prepared"/>
  <elements xsi:type="sbpmn:Sequence" xmi:id="_Hir_0BEDEeqWZpyjAqEpSw" name="eat meal" from="_FdFlQBEDEeqWZpyjAqEpSw" to="_NWi00BEDEeqWZpyjAqEpSw"/>
  <elements xsi:type="sbpmn:EndEv" xmi:id="_NWi00BEDEeqWZpyjAqEpSw" name="hunger satisfied"/>
</sbpmn:BusinessProcess>
</xml>
 , generate model mutants according to these #RULES generate 2 mutants
in "data/out/"
from "data/model/"
metamodel "/NewWodelProject/data/model/simplebpmn.ecore"

with blocks {
		block {
		 a0 = select one Activity
		 src0 = select one Sequence where {^to = a0}
		 tar0 = select one Sequence where {^from = a0}
		 a1 = select one Activity where {self <> a0}
		 src1 = select one Sequence where {^to = a1}
		 tar1 = select one Sequence where {^from = a1}
		 modify src0 with {^to = a1}
		 modify tar0 with {^from = a1}
		 modify src1 with {^to = a0}
		 modify tar1 with {^from = a0}
		 create BusinessProcess[1..5]
	}
}  export the generated mutants in a zip file. Use the content of the prompt to generate the file